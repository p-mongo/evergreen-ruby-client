#!/usr/bin/env ruby

$: << File.join(File.dirname(File.realpath(__FILE__)), '../lib')

ENV['MONGOID_ENV'] = 'development'

require 'fe/boot_lite'
require 'fe/patch_build_maker'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.on('-b', '--base=BASE', 'Specify base branch') do |v|
    options[:base_branch] = v
  end
  opts.on('-p', '--project=PROJECT', 'Evergreen project to patch into') do |v|
    options[:eg_project_id] = v
  end
  opts.on('-f', '--full', 'Use current directory contents as new tree rather than diff output') do
    options[:full] = true
  end
=begin
  opts.on('-f', '--force', 'Force submission') do |v|
    options[:force] = true
  end
=end
  opts.on('-y', '--priority=PRIORITY', 'Specify priority') do |v|
    if v.to_i.to_s != v
      raise "Invalid priority (must be an integer): #{v}"
    end
    options[:priority] = v.to_i
  end
end.parse!

pbm = PatchBuildMaker.new(**options)
pbm.submit
