#!/usr/bin/env ruby

require 'json'
require 'dotenv'
require 'nokogiri'
require 'byebug'
require 'faraday'
require 'faraday/detailed_logger'

Dotenv.load

# https://evergreen.mongodb.com/version/5b216f090305b92b1f660e80
start_url = ARGV.shift
if start_url.nil?
  raise "Need a URL"
end

$conn = Faraday.new('https://evergreen.mongodb.com/api/rest/v2') do |f|
  #f.request :url_encoded
  #f.response :detailed_logger
  f.adapter  Faraday.default_adapter
  f.headers['user-agent'] = 'Mozilla/5.0 (Linux; X11; rv:27.9) Gecko/20100101 Firefox/27.9 (Pale Moon)'
  f.headers['auth-username'] = ENV['AUTH_USERNAME']
  f.headers['api-key'] = ENV['API_KEY']
end

def do_log(version_id, build_variant_id)
  resp = $conn.get("versions/#{version_id}/builds")
  payload = JSON.parse(resp.body)
  variant = payload.detect do |build|
    build['build_variant'] == build_variant_id
  end
  if variant.nil?
    raise 'Variant not found'
  end

  if variant['tasks'].length != 1
    raise "Have #{variant['tasks'].length} tasks, expecting 1"
  end

  task_id = variant['tasks'].first

  resp = $conn.get("tasks/#{task_id}")
  payload = JSON.parse(resp.body)

  log_url = payload['logs']['all_log']

  resp = $conn.get(log_url)
  puts resp.body
end

unless start_url =~ %r,https://evergreen.mongodb.com/version/(\w+)$,
  raise 'URL malformed'
end

version_id = $1

if ARGV.first == 'log'
  ARGV.shift
  do_log(version_id, ARGV.shift)
  exit
end

resp = $conn.get("versions/#{version_id}/builds")
payload = JSON.parse(resp.body)

payload = payload.sort_by { |build| build['build_variant'] }
success_count = 0
pending_count = 0
payload.each do |build|
  case build['status']
  when 'failed'
    puts "#{build['build_variant']} #{build['status']}"
  when 'success'
    success_count += 1
  else
    pending_count += 1
  end
end
if success_count > 0 || pending_count > 0
  puts "Plus #{success_count} successful and #{pending_count} pending builds"
end
