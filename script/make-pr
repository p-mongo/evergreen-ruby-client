#!/usr/bin/env ruby

$: << 'lib'

ENV['MONGOID_ENV'] = 'development'

require 'fe/boot_lite'

autoload :Jira, 'jira/client'

num = ARGV.shift
num = num.to_i
unless num > 0
  raise 'Expected a ticket number'
end

class PrMaker
  def initialize(num)
    @num = num

    @config = if num > 2000
      @repo_name = 'mongoid'
      @jira_project = 'mongoid'
    else
      @repo_name = 'mongo-ruby-driver'
      @jira_project = 'ruby'
    end
  end

  attr_reader :num, :repo_name, :jira_project

  def make_pr
    #pr_info = gh_client.post_json("/repos/mongodb/#{repo_name}/pulls", title: num.to_s, head: "p-mongo:#{num}", base: 'master', body: "pr #{num}")

    pr_num = 4597
    pr_url = "https://github.com/mongodb/#{repo_name}/pull/#{pr_num}"

    # https://developer.atlassian.com/server/jira/platform/jira-rest-api-for-remote-issue-links/
    payload = {
      globalId: "#{jira_project}-#{num}-pr",
      object: {
        url: pr_url,
        title: "Fix - PR ##{pr_num}",
        icon: {"url16x16":"https://github.com/favicon.ico"},
        status: {
          icon: {},
        },
      },
    }
    jira_client.post_json("issue/#{@jira_project.upcase}-#{@num}/remotelink", payload)
    #byebug
    1
  end

  private def gh_client
    @gh_client ||= Github::Client.new(
        username: ENV['GITHUB_USERNAME'],
        auth_token: ENV['GITHUB_TOKEN'],
      )
  end

  private def jira_client
    @jira_client ||= begin
      options = {
        :username     => ENV['JIRA_USERNAME'],
        :password     => ENV['JIRA_PASSWORD'],
        :site         => ENV['JIRA_SITE'],
      }

      Jira::Client.new(options)
    end
  end
end

PrMaker.new(num).make_pr
