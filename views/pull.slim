style
  | .passed { background: #cfc; }
  | .failed { background: #fcc; }
  | .pending { background: #ffc; }

h2
  a href=@pull['html_url'] ##{@pull['number']}: #{@pull['title']}
  '
  span by #{@pull['user']['login']}

p
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/restart-failed" Restart failed
  '
  a href="/repos/#{@pull.repo_full_name}/pulls/#{@pull['number']}/request-review" Request review
  - if @pull.top_evergreen_status
    '
    a href="/projects/#{URI.escape(@pull.evergreen_project_id)}/versions/#{@pull.evergreen_version_id}" Evergreen build

- if @pull.repo_full_name == 'mongodb/mongo-ruby-driver'
  table
    tr
      td Server
      td Topology
      td Auth
      - @ruby_versions.each do |ruby_version|
        td= ruby_version
    - @configs['mongodb-version'].each do |mongodb_version|
      - @configs['topology'].each do |topology|
        - @configs['auth-and-ssl'].each do |auth|
          tr
            td= mongodb_version
            td= topology
            td= auth
            - @ruby_versions.each do |ruby_version|
              td
                - %w(all zlib).each do |flavor|
                  - suffix = flavor == 'zlib' ? '_compressor~zlib' : ''
                  - label = "evergreen/#{flavor}__mongodb-version~#{mongodb_version}_topology~#{topology}_auth-and-ssl~#{auth}_ruby~ruby-#{ruby_version}#{suffix}"
                  - status = @pull.take_status(label)
                  - prefix = flavor == 'all' ? 'A' : 'Z'
                  - if status
                    div class="#{{'failure' => 'failed', 'success' => 'passed', 'pending' => 'pending'}[status['state']]}"
                      ' #{prefix}
                      a href=status['target_url'] Go
                      '
                      - if status.log_url
                        a href=status.log_url Log
                      '
                      - if status.restart_url
                        a href=status.restart_url Restart

table
  - @pull.untaken_statuses.each do |status|
    tr class="#{{'failure' => 'failed', 'success' => 'passed', 'pending' => 'pending'}[status['state']]}"
      td
        = status['context']
        - if status['description']
          div= status['description']
      td
        a href=status['target_url'] Go
      td
        - if status.log_url
          a href=status.log_url Log
      td
        - if status.restart_url
          a href=status.restart_url Restart
    - if status['context'] == 'continuous-integration/travis-ci/pr'
      - @pull.travis_statuses.each do |status|
        tr class="#{status.state}"
          td
            = status.context
          td
            a href=status.target_url Go
          td
            - if status.log_url
              a href=status.log_url Log
          td
            - if status.restart_url
              a href=status.restart_url Restart
