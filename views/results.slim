- if @results.summary[:failure_count] > 0
  h2 #{@results.summary[:failure_count]} failures
  
  ul
    - @results.failed_files.each do |file|
      li
        a href="##{file[:file_path].gsub(/\W/, '-')}" #{file[:file_path]}
        '
        | (#{file[:failure_count]})
  
  - prev_path = nil
  - @results.failed_results.each_with_index do |failure, index|
    - if prev_path != failure[:file_path]
      a name=failure[:file_path].gsub(/\W/, '-')
      - prev_path = failure[:file_path]
    div
      p
        b= "#{index+1})"
        '
        b= failure[:id]
      p= failure[:description]
      pre
        = failure[:failure][:class]
        ' :
        == Ansi::To::Html.new(CGI.escapeHTML(failure[:failure][:message])).to_html.gsub("\n", '<br>')
      - if failure[:failure][:backtrace]
        pre
          = failure[:failure][:backtrace].join("\n")
      - else
        p No backtrace for this failure.

      - if failure[:sdam_log_entries] && !failure[:sdam_log_entries].empty?
        p SDAM log:
        pre
          - failure[:sdam_log_entries].each do |entry|
            = entry + "\n"

- if @results.summary[:errors_outside_of_examples_count] > 0
  h2 #{@results.summary[:errors_outside_of_examples_count]} errors outside of examples
  
  - @results.messages.each_with_index do |message, index|
    div
      p
        b= "#{index+1})"
      pre== Ansi::To::Html.new(CGI.escapeHTML(message)).to_html.gsub("\n", '<br>')

h2
  ' Slowest #{@results.slowest_examples.length} examples
  small
    '(#{Taw.time_ago_in_words(Time.now - @results.slowest_total_time, approx: 2)}
    ' out of
    ' #{Taw.time_ago_in_words(Time.now - @results.summary[:duration], approx: 2)})
ul
  - @results.slowest_examples[0..19].each do |result|
    li
      | #{result[:id]} #{result[:description]} (<b>#{'%.1f' % result[:time]} s</b>)
      - if result[:sdam_log_entries] && !result[:sdam_log_entries].empty?
        pre
          - result[:sdam_log_entries].each do |entry|
            = entry + "\n"

- if @raw_artifact_url
  p
    a href=@raw_artifact_url Raw JSON
