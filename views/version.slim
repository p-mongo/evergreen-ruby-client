style
  | .passed { background: #cfc; }
  | .failed { background: #fcc; }
  | .pending { background: #ffc; }

p
  a href="/projects/#{@project_id}" #{@project_id}
  '
  a href="https://evergreen.mongodb.com/version/#{@version.id}" @ Evergreen
  '
  a href="/projects/#{@project_id}/versions/#{@version.id}/restart-failed" Restart failed
  - if @newest_version
    '
    a href="/projects/#{@project_id}/versions/#{@newest_version.id}" Newest version
  - if @builds.any? { |build| !build.completed? }
    '
    ' Bump priority to:
    a href="/projects/#{@project_id}/versions/#{@version.id}/bump?priority=70" 70
    '
    a href="/projects/#{@project_id}/versions/#{@version.id}/bump?priority=90" 90
    '
    a href="/projects/#{@project_id}/versions/#{@version.id}/bump?priority=99" 99
    '
    a href="/projects/#{@project_id}/versions/#{@version.id}/bump?priority=100" 100

table
  - @builds.each do |build|
    tr class="#{{'failure' => 'failed', 'failed' => 'failed', 'success' => 'passed', 'started' => 'pending'}[build.status]}"
      td= build.build_variant
      td= build.status
      td
        - if build.tasks.length == 1
          - task = build.tasks.first
          a href="https://evergreen.mongodb.com/task/#{task.id}" Go
          '
          a href=task.task_log_html_url Log
          - if task.waiting?
            '
            | (p=#{task.priority})
        - else
          ul
            - build.tasks.each do |task|
              li class="#{{'failure' => 'failed', 'success' => 'passed', 'started' => 'pending', 'undispatched' => 'pending'}[task.status]}"
                = task.display_name
                '
                = task.status
                '
                a href="https://evergreen.mongodb.com/task/#{task.id}" Go
                '
                a href=task.log_url Log
                - if task.waiting?
                  '
                  | (p=#{task.priority})

p Created: #{Taw.time_ago_in_words(@version.created_at, approx: 2)} ago
